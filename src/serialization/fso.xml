<cpp name="fso">
	<struct name="Sha256Digest">
		<include header="&quot;Sha256Digest.h&quot;" />
		<bool name="valid"/>
		<array name="digest" length="32">
			<uint8_t/>
		</array>
	</struct>
	
	<struct name="Guid">
		<include header="&quot;Guid.h&quot;" />
		<bool name="valid"/>
		<array name="data" length="16">
			<uint8_t/>
		</array>
	</struct>
	
	<class name="OpaqueTimestamp">
		<uint64_t name="timestamp" />
		<include header="&quot;OpaqueTimestamp.h&quot;" />
	</class>
	
	<class name="FileSystemObject" is_abstract="1">
		<protected/>
		<uint64_t name="stream_id" />
		<uint64_t name="differential_chain_id" />
		<wstring name="name" />
		<shared_ptr name="mapped_base_path">
			<wstring/>
		</shared_ptr>
		<shared_ptr name="unmapped_base_path">
			<wstring/>
		</shared_ptr>
		<shared_ptr name="link_target">
			<wstring/>
		</shared_ptr>
		<uint64_t name="size" />
		<OpaqueTimestamp name="modification_time" />
		<vector name="exceptions">
			<string/>
		</vector>
		<bool name="is_main" />
		<pointer name="parent">
			<FileSystemObject/>
		</pointer>
		<int32_t name="latest_version" />
		<include header="&quot;FileSystemObject.h&quot;" />
	</class>
	
	<class name="DirectoryishFso" is_abstract="1">
		<base base="FileSystemObject" />
		<include header="&quot;DirectoryishFso.h&quot;" />
	</class>
	<class name="DirectoryFso">
		<base base="DirectoryishFso" />
		<vector name="children" >
			<shared_ptr>
				<FileSystemObject/>
			</shared_ptr>
		</vector>
		<include header="&quot;DirectoryFso.h&quot;" />
	</class>
	<class name="DirectorySymlinkFso">
		<base base="DirectoryishFso" />
		<include header="&quot;DirectorySymlinkFso.h&quot;" />
	</class>
	<class name="JunctionFso">
		<base base="DirectorySymlinkFso" />
		<include header="&quot;JunctionFso.h&quot;" />
	</class>
	
	<class name="FilishFso" is_abstract="1">
		<base base="FileSystemObject" />
		<Sha256Digest name="hash" />
		<Guid name="file_system_guid" />
		<include header="&quot;FilishFso.h&quot;" />
	</class>
	<class name="RegularFileFso">
		<base base="FilishFso" />
		<include header="&quot;RegularFileFso.h&quot;" />
	</class>
	<class name="FileHardlinkFso">
		<base base="RegularFileFso" />
		<vector name="peers">
			<wstring/>
		</vector>
		<include header="&quot;FileHardlinkFso.h&quot;" />
	</class>
	<class name="FileSymlinkFso">
		<base base="FilishFso" />
		<include header="&quot;FileSymlinkFso.h&quot;" />
	</class>
	<class name="FileReparsePointFso">
		<base base="FileSymlinkFso" />
		<include header="&quot;FileReparsePointFso.h&quot;" />
	</class>
	
	<struct name="ArchiveMetadata">
		<uint64_t name="entries_size_in_archive" />
		<vector name="entry_sizes">
			<uint64_t/>
		</vector>
		<vector name="stream_ids">
			<uint64_t/>
		</vector>
		<vector name="stream_sizes">
			<uint64_t/>
		</vector>
		<include header="&quot;ArchiveMetadata.h&quot;" />
	</struct>
	
	<struct name="VersionManifest">
		<OpaqueTimestamp name="creation_time" />
		<int32_t name="version_number" />
		<vector name="version_dependencies">
			<int32_t/>
		</vector>
		<uint32_t name="entry_count" />
		<uint32_t name="first_stream_id" />
		<uint32_t name="next_stream_id" />
		<uint32_t name="first_differential_chain_id" />
		<uint32_t name="next_differential_chain_id" />
		<ArchiveMetadata name="archive_metadata" />
		<include header="&quot;VersionManifest.h&quot;" />
	</struct>
	
	<class name="BackupStream" is_abstract="1">
		<uint64_t name="unique_id" />
		<include header="&quot;BackupStream.h&quot;" />
	</class>
	
	<class name="UnmodifiedStream">
		<base base="BackupStream" />
		<uint64_t name="virtual_size" />
		<int32_t name="containing_version" />
		<include header="&quot;UnmodifiedStream.h&quot;" />
	</class>
	
	<class name="FullStream">
		<base base="BackupStream" />
		<uint64_t name="virtual_size" />
		<uint64_t name="physical_size" />
		<include header="&quot;FullStream.h&quot;" />
	</class>
	
	<!--
	<class name="DiffStream">
		<base base="BackupStream" />
		<uint64_t name="virtual_size" />
		<uint64_t name="physical_size" />
	</<class>
	-->
	
	<class name="RsaKeyPair">
		<uint32_t name="priv_size" />
		<vector name="encrypted_private_key">
			<uint8_t/>
		</vector>
		<vector name="public_key">
			<uint8_t/>
		</vector>
		<array name="initialization_vector" length="12">
			<uint8_t/>
		</array>
		<include header="&quot;RsaKeyPair.h&quot;" />
	</class>
</cpp>
